services:

  # PostgreSQL
  db:
    image: postgres:16.1-alpine
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  # BackEnd
  backend:
    build:
      context: backend
      target: dev
    ports:
      - '8000:8000'
    env_file:
      - .env
    volumes:
      - .:/proj/
    restart: always
    depends_on:
      db:
        condition: service_healthy

  # Redis
  redis:
    image: redis:7.0.5-alpine
    container_name: redis

  # Celery Worker
  celery:
    build:
      context: backend
    command: celery -A src.infrastructure.tasks.tasks worker --loglevel=info
    volumes:
      - .:/proj
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  # FrontEnd
  frontend:
    build:
      context: frontend
    ports:
      - '8080:8080'
    restart: always
    volumes:
      - .:/proj/
    depends_on:
      backend:
        condition: service_started
